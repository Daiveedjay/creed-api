{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ReturnType_typeofuserSignupSchema.parse_": {
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"domainName": {
						"type": "string"
					},
					"fullName": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Obtain the return type of a function type"
			},
			"UserSignupDTOType": {
				"$ref": "#/components/schemas/ReturnType_typeofuserSignupSchema.parse_"
			},
			"ReturnType_typeofuserSigninSchema.parse_": {
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Obtain the return type of a function type"
			},
			"UserSigninDTOType": {
				"$ref": "#/components/schemas/ReturnType_typeofuserSigninSchema.parse_"
			},
			"ReturnType_typeofpasswordResetSchema.parse_": {
				"properties": {
					"password": {
						"type": "string"
					},
					"otp": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Obtain the return type of a function type"
			},
			"PasswordResetDTO": {
				"$ref": "#/components/schemas/ReturnType_typeofpasswordResetSchema.parse_"
			},
			"ReturnType_typeofboardCreateSchema.parse_": {
				"properties": {
					"domainId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Obtain the return type of a function type"
			},
			"BoardCreateDTO": {
				"$ref": "#/components/schemas/ReturnType_typeofboardCreateSchema.parse_"
			},
			"ReturnType_typeofboardUpdateSchema.parse_": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Obtain the return type of a function type"
			},
			"BoardUpdateDTO": {
				"$ref": "#/components/schemas/ReturnType_typeofboardUpdateSchema.parse_"
			},
			"ReturnType_typeofdomainCreateSchema.parse_": {
				"properties": {
					"domainName": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Obtain the return type of a function type"
			},
			"DomainCreateDTO": {
				"$ref": "#/components/schemas/ReturnType_typeofdomainCreateSchema.parse_"
			},
			"ReturnType_typeofdomainUpdateSchema.parse_": {
				"properties": {
					"domainName": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Obtain the return type of a function type"
			},
			"DomainUpdateDTO": {
				"$ref": "#/components/schemas/ReturnType_typeofdomainUpdateSchema.parse_"
			},
			"UserUpdateDTOType": {
				"properties": {
					"availableHoursTo": {
						"type": "string"
					},
					"availableHoursFrom": {
						"type": "string"
					},
					"language": {
						"type": "string"
					},
					"location": {
						"type": "string"
					},
					"department": {
						"type": "string"
					},
					"jobTitle": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"domainName": {
						"type": "string"
					},
					"fullName": {
						"type": "string"
					}
				},
				"type": "object"
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"type": "apiKey",
				"name": "access_token",
				"in": "query"
			}
		}
	},
	"info": {
		"title": "creed-api",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/auth/signup": {
			"post": {
				"operationId": "SignUp",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {},
								"examples": {
									"Example 1": {
										"value": {
											"email": "john@example.com",
											"password": "My_$3cure_p1n",
											"fullName": "John Doe",
											"domainName": "JohnDoe"
										}
									}
								}
							}
						}
					}
				},
				"description": "Retrieves the details of an existing user.\nProvided the user is logged in this endpoint returns the corresponding user details.",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserSignupDTOType"
							}
						}
					}
				}
			}
		},
		"/api/auth/signin": {
			"post": {
				"operationId": "SignIn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {},
								"examples": {
									"Example 1": {
										"value": {
											"email": "john@example.com",
											"password": "My_$3cure_p1n"
										}
									}
								}
							}
						}
					}
				},
				"description": "Endpoint to collect auth details and issue auth tokens if correct.",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserSigninDTOType"
							}
						}
					}
				}
			}
		},
		"/api/auth/forgot-password": {
			"get": {
				"operationId": "ForgotPassword",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Generates and send an OTP to user email if a user with the specified email exists",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [
					{
						"description": "Email address of account for password reset",
						"in": "query",
						"name": "email",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/auth/reset-password": {
			"post": {
				"operationId": "ResetPassword",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Accepts new password and OTP sent to email for password reset process",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PasswordResetDTO"
							}
						}
					}
				}
			}
		},
		"/api/auth/sign-google-link": {
			"get": {
				"operationId": "SignGoogleLink",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Retrieves a google signin link for google signin or signup processes",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [
					{
						"description": "(Optional) url google should redirect the user to after the google auth screen",
						"in": "query",
						"name": "redirectURL",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/auth/signin-google": {
			"post": {
				"operationId": "SignInGoogle",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Uses successfull google auth screen parameters to signin a new user",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "code",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "redirectURL",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/auth/signup-google": {
			"post": {
				"operationId": "SignUpGoogle",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Uses successfull google auth screen parameters to signup a new user",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/domains/{domainId}/boards": {
			"get": {
				"operationId": "GetBoards",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Retrieves a list of boards for a domain",
				"tags": [
					"Boards"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "domainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateBoard",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Creates a new board in a domain",
				"tags": [
					"Boards"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BoardCreateDTO"
							}
						}
					}
				}
			}
		},
		"/api/domains/{domainId}/boards/{boardId}": {
			"get": {
				"operationId": "GetBoard",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Retrieves a specific board",
				"tags": [
					"Boards"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "boardId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "EditBoard",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Edits a board",
				"tags": [
					"Boards"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "boardId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BoardUpdateDTO"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteBoard",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Deletes a board",
				"tags": [
					"Boards"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "boardId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/domains": {
			"post": {
				"operationId": "CreateDomain",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Create a domain",
				"tags": [
					"Domains"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DomainCreateDTO"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetDomains",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Retrieves list of domains belonging to a user",
				"tags": [
					"Domains"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": []
			}
		},
		"/api/domains/{domainId}": {
			"get": {
				"operationId": "GetDomain",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Retrieves a domain belonging to a user",
				"tags": [
					"Domains"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "domainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "EditDomain",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Edit a domain belonging to a user",
				"tags": [
					"Domains"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "domainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DomainUpdateDTO"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteDomain",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Delete a domain belonging to a user",
				"tags": [
					"Domains"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "domainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/user/profile": {
			"get": {
				"operationId": "GetProfile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Retrieves the details of an existing user.\nProvided the user is logged in this endpoint returns the corresponding user details.",
				"tags": [
					"User"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": []
			}
		},
		"/api/user": {
			"put": {
				"operationId": "EditProfile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {},
								"examples": {
									"Example 1": {
										"value": {
											"fullName": "John Doe",
											"domainName": "JohnDoe"
										}
									}
								}
							}
						}
					}
				},
				"description": "Updates the details of an existing user.\nProvided the user is logged in this endpoint accepts primary values for change except email and password.",
				"tags": [
					"User"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserUpdateDTOType"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}